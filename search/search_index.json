{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CAPM","text":"<p> Code Analysis Package Manager </p> <p>Code analysis should be easy and fun, and one of the first things to set up for a software project, not an afterthought.</p> <p>CAPM is a package manager for all tools related code analysis. No matter if you just want to run a linter, a code formatter, a duplication finder, or a complete code quality suite, CAPM makes it simple (and fun!). </p>"},{"location":"#key-features-and-design-principles","title":"Key features and design principles","text":"<ul> <li>Get started today: Only configure what is important</li> <li>Powerful syntax: Set defaults at high level, override at lower level</li> </ul>"},{"location":"development/","title":"Development","text":"<p>After installing dependencies with <code>uv sync</code>, CAPM can be run from the repository root like this:</p> <pre><code>uv run capm\n</code></pre> <p>For example, to run the <code>tokei</code> package, run:</p> <pre><code>uv run capm run tokei\n</code></pre>"},{"location":"development/#local-installation-using-pipx","title":"Local installation using pipx","text":"<p>To install the development repository locally in editable mode run:</p> <pre><code>pipx install --force --editable .\n</code></pre> <p>To install the <code>main</code> branch locally run:</p> <pre><code>pipx install git+https://github.com/getcapm/capm.git\n</code></pre> <p>Or to install another branch locally run:</p> <pre><code>pip install git+https://github.com/getcapm/capm.git@issue-123\n</code></pre>"},{"location":"development/#building-the-binary-distribution","title":"Building the binary distribution","text":"<p>Generate a self-contained binary:</p> <pre><code>uv run poe bundle\n</code></pre>"},{"location":"development/#static-documentation","title":"Static documentation","text":"<p>Generating the static documentation:</p> <pre><code>uv run mkdocs build\n</code></pre> <p>See the output:</p> <pre><code>uv run mkdocs serve\n</code></pre>"},{"location":"installation/","title":"Getting Started","text":""},{"location":"installation/#installation","title":"Installation","text":""},{"location":"installation/#homebrew","title":"Homebrew","text":"<p>CAPM is available for Homebrew:</p> <pre><code>brew install getcapm/capm/capm\n</code></pre>"},{"location":"installation/#pipx","title":"Pipx","text":"<p>To install the standalone version of CAPM in an isolated Python environment using pipx run:</p> <pre><code>pipx install capm\n</code></pre>"},{"location":"installation/#pypi","title":"PyPi","text":"<p>To install the standalone version of CodeLimit for your default Python installation run:</p> <pre><code>python -m pip install capm\n</code></pre>"},{"location":"installation/#platform-binaries","title":"Platform binaries","text":"<p>Binaries for different platforms (macOS, Linux, Windows) are available on the latest release page.</p>"},{"location":"packages/","title":"Packages","text":"Package Version Type Technology ansible-lint 25.8.1 linter Ansible arm-ttk 20250401 linter ARM asl-validator 4.0.0 linter ASL cfn-lint 1.38.3 linter CloudFormation checkov 3.2.461 linter 3+ clang-format 1:18.0-59~exp2 formatter C++ codelimit 0.20.2 linter cpplint 2.0.2 linter C++ jscpd 4.0.5 duplication mypy 1.17.1 linter radon 6.0.1 analyzer ruff 0.12.9 linter tokei 12.1.2-r5 analyzer trivy 0.65.0 linter Kubernetes ubuntu 24.04 other xenon 0.9.3 complexity"},{"location":"configuration/general/","title":"General","text":"General settings page"},{"location":"configuration/general/#description","title":"description","text":"<p>Short description of the repository.</p> <p>Example:</p> <pre><code>general:\n  description: Repository description goes here\n</code></pre>"},{"location":"configuration/general/#homepage","title":"homepage","text":"<p>URL with more information about the repository.</p> <p>Example:</p> <pre><code>general:\n  homepage: https://example.com\n</code></pre>"},{"location":"configuration/general/#private","title":"private","text":"<p>Either <code>true</code> to make the repository private or <code>false</code> to make it public.</p> <p>Example:</p> <pre><code>general:\n  private: false\n</code></pre>"},{"location":"configuration/general/#security_and_analysis","title":"security_and_analysis","text":"<p>Specify which security and analysis features to enable or disable for the repository.</p> <p>Example:</p> <pre><code>general:\n  security_and_analysis:\n    advanced_security:\n      status: enabled\n    code_security:\n      status: enabled\n    secret_scanning:\n      status: enabled\n    secret_scanning_push_protection:\n      status: disabled\n    secret_scanning_ai_detection: \n      status: disabled\n    secret_scanning_non_provider_patterns:\n      status: disabled\n</code></pre>"},{"location":"configuration/general/#has_issues","title":"has_issues","text":"<p>Either <code>true</code> to enable issues for this repository or <code>false</code> to disable them.</p> <p>Example:</p> <pre><code>general:\n  has_issues: false\n</code></pre>"},{"location":"configuration/general/#has_projects","title":"has_projects","text":"<p>Either <code>true</code> to enable projects for this repository or <code>false</code> to disable them.</p> <p>Example:</p> <pre><code>general:\n  has_projects: false\n</code></pre>"},{"location":"configuration/general/#has_wiki","title":"has_wiki","text":"<p>Either <code>true</code> to enable the wiki for this repository or <code>false</code> to disable it.</p> <p>Example:</p> <pre><code>general:\n  has_wiki: false\n</code></pre>"},{"location":"configuration/general/#is_template","title":"is_template","text":"<p>Either true to make this repo available as a template repository or false to prevent it.</p> <p>Example:</p> <pre><code>general:\n  is_template: true\n</code></pre>"},{"location":"configuration/general/#default_branch","title":"default_branch","text":"<p>Updates the default branch for this repository.</p> <p>Example:</p> <pre><code>general:\n  default_branch: develop\n</code></pre>"},{"location":"configuration/general/#allow_squash_merge","title":"allow_squash_merge","text":"<p>Either <code>true</code> to allow squash-merging pull requests, or <code>false</code> to prevent squash-merging.</p> <p>Example:</p> <pre><code>general:\n  allow_squash_merge: true\n</code></pre>"},{"location":"configuration/general/#allow_merge_commit","title":"allow_merge_commit","text":"<p>Either <code>true</code> to allow merging pull requests with a merge commit, or <code>false</code> to prevent merging pull requests with merge commits.</p> <p>Example:</p> <pre><code>general:\n  allow_merge_commit: false\n</code></pre>"},{"location":"configuration/general/#allow_rebase_merge","title":"allow_rebase_merge","text":"<p>Either <code>true</code> to allow rebase-merging pull requests, or <code>false</code> to prevent rebase-merging.</p> <p>Example:</p> <pre><code>general:\n  allow_rebase_merge: false\n</code></pre>"},{"location":"configuration/general/#allow_auto_merge","title":"allow_auto_merge","text":"<p>Either <code>true</code> to allow auto-merge on pull requests, or <code>false</code> to disallow auto-merge.</p> <p>Example:</p> <pre><code>general:\n  allow_auto_merge: true\n</code></pre>"},{"location":"configuration/general/#delete_branch_on_merge","title":"delete_branch_on_merge","text":"<p>Either <code>true</code> to allow automatically deleting head branches when pull requests are merged, or <code>false</code> to prevent automatic deletion.</p> <p>Example:</p> <pre><code>general:\n  delete_branch_on_merge: true\n</code></pre>"},{"location":"configuration/general/#allow_update_branch","title":"allow_update_branch","text":"<p>Either <code>true</code> to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or <code>false</code> otherwise.</p> <p>Example:</p> <pre><code>general:\n  allow_update_branch: true\n</code></pre>"},{"location":"configuration/general/#squash_merge_commit_title","title":"squash_merge_commit_title","text":"<p>Required when using squash_merge_commit_message.</p> <p>The default value for a squash merge commit title:</p> <ul> <li>PR_TITLE: default to the pull request's title.</li> <li>COMMIT_OR_PR_TITLE: default to the commit's title (if only one commit) or the pull request's title (when more than one commit).</li> </ul> <pre><code>general:\n  squash_merge_commit_title: PR_TITLE\n</code></pre>"},{"location":"configuration/general/#squash_merge_commit_message","title":"squash_merge_commit_message","text":"<p>The default value for a squash merge commit message:</p> <ul> <li>PR_BODY: default to the pull request's body.</li> <li>COMMIT_MESSAGES: default to the branch's commit messages.</li> <li>BLANK: default to a blank commit message.</li> </ul> <pre><code>general:\n  squash_merge_commit_message: PR_BODY\n</code></pre>"},{"location":"configuration/general/#merge_commit_title","title":"merge_commit_title","text":"<p>Required when using merge_commit_message.</p> <p>The default value for a merge commit title.</p> <ul> <li>PR_TITLE: default to the pull request's title.</li> <li>MERGE_MESSAGE: default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).</li> </ul> <pre><code>general:\n  merge_commit_title: PR_TITLE\n</code></pre>"},{"location":"configuration/general/#merge_commit_message","title":"merge_commit_message","text":"<p>The default value for a merge commit message.</p> <ul> <li>PR_TITLE: default to the pull request's title.</li> <li>PR_BODY: default to the pull request's body.</li> <li>BLANK: default to a blank commit message.</li> </ul> <pre><code>general:\n  merge_commit_message: PR_BODY\n</code></pre>"},{"location":"configuration/general/#archived","title":"archived","text":"<p>Whether to archive this repository. <code>false</code> will unarchive a previously archived repository.</p> <pre><code>general:\n  archived: true\n</code></pre>"},{"location":"configuration/general/#allow_forking","title":"allow_forking","text":"<p>Either <code>true</code> to allow private forks, or <code>false</code> to prevent private forks.</p> <pre><code>general:\n  allow_forking: false\n</code></pre>"},{"location":"configuration/general/#web_commit_signoff_required","title":"web_commit_signoff_required","text":"<p>Either <code>true</code> to require contributors to sign off on web-based commits, or <code>false</code> to not require contributors to sign off on web-based commits.</p> <pre><code>general:\n  web_commit_signoff_required: true\n</code></pre>"}]}